class Solution {
    public int subarraySum(int[] nums, int k) {


        int c = 0;
       
        int[] prefix = new int[nums.length];
        prefix[0] = nums[0];

    for(int i = 1;i<nums.length;i++)
    {
        prefix[i] = prefix[i-1] + nums[i];
    }

    HashMap<Integer,Integer> map = new HashMap<>();

    for(int i = 0;i<nums.length;i++)
    {
        
        int a = prefix[i] - k;

        if(prefix[i] == k)
        c++;

        if(map.containsKey(a))
        {
            c = c + map.get(a);
        }
        if(map.containsKey(prefix[i]))
        {
            map.put(prefix[i], map.get(prefix[i])+1);

        }
        else
         map.put(prefix[i],1);
    }

        return c;
    }
}
